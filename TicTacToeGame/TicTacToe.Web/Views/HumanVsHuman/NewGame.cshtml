@model TicTacToe.Web.Models.HumanVsHuman.ViewModels.NewHumanVsHumanGameViewModel

@{
    ViewBag.Title = "HumanVsHuman";
}

<div id="game-container">
    
    <h2 class="text-center">Human vs Human</h2>

    @using(Ajax.BeginForm("NewGame", "HumanVsHuman", null, new AjaxOptions()
    {
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "game-container"
    }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="new-game-form">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group" id="turn-dropdown-container">
                @Html.LabelFor(model => model.Players, htmlAttributes: new { @class = "control-label custom-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(x => x.Players, new SelectList(Model.Players), "Select who will go first", new { @id = "turn-dropdown" })
                </div>
                @Html.ValidationMessageFor(model => model.Players, "", new { @class = "text-danger", @id = "validation-message" })
            </div>

            <div class="form-group">
                <input type="submit" value="Start" id="start-new-game-button" class="btn btn-primary btn-lg text-center" />
            </div>
        </div>
    }
</div>

@Ajax.ActionLink("Back to Main Menu", "HumanVsHuman", "Home", null, new AjaxOptions()
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "main-content"
},
new
{
    @class = "btn btn-primary btn-lg text-center",
    @id = "back-to-main-menu-button"
})